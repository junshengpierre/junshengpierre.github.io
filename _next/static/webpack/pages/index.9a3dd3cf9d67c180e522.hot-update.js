webpackHotUpdate_N_E("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react_icons_fa__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-icons/fa */ \"./node_modules/react-icons/fa/index.esm.js\");\nvar _this = undefined,\n    _jsxFileName = \"/Users/junshengpierre/Me/Workspace/junshengpierre.github.io/pages/index.js\";\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\nvar Index = function Index() {\n  return __jsx(\"div\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"1tjpnex-Index\",\n      styles: \"display:grid;height:100vh;@media (min-width: 768px){justify-content:center;align-items:center;};label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVlrQiIsImZpbGUiOiIvVXNlcnMvanVuc2hlbmdwaWVycmUvTWUvV29ya3NwYWNlL2p1bnNoZW5ncGllcnJlLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NzcydcbmltcG9ydCB0dyBmcm9tICdAdGFpbHdpbmRjc3NpbmpzL21hY3JvJ1xuXG5pbXBvcnQge1xuICBGYUJyaWVmY2FzZSxcbiAgRmFHaXRodWIsXG4gIEZhTGlua2VkaW5JbixcbiAgRmFMb2NhdGlvbkFycm93LFxuICBGYVR3aXR0ZXIsXG59IGZyb20gJ3JlYWN0LWljb25zL2ZhJ1xuXG5jb25zdCBJbmRleCA9ICgpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BncmlkIG1kOmp1c3RpZnktY2VudGVyIG1kOml0ZW1zLWNlbnRlciBoLXNjcmVlbmApfT5cbiAgICA8bWFpbiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtY29sIG1kOmZsZXgtcm93IG1heC13LWZ1bGwgcHgtNCBweS00IGApfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgPGltZ1xuICAgICAgICAgIGNsYXNzTmFtZT17Y3NzKHR3YHctNjQgcm91bmRlZC1mdWxsYCl9XG4gICAgICAgICAgc3JjPVwiL3Byb2ZpbGVfaW1hZ2VfanVuc2hlbmdwaWVycmUuanBnXCJcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1kOm1sLTggbWQ6bWF4LXctbWRgKX0+XG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT17Y3NzKHR3YGZvbnQtc2VtaWJvbGQgdGV4dC0zeGwgbWItMiBmb250LXNhbnNgKX0+XG4gICAgICAgICAgICBUZW8gSnVuIFNoZW5nLCBQaWVycmVcbiAgICAgICAgICA8L2gxPlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlciBtYi0yYCl9PlxuICAgICAgICAgICAgPEZhQnJpZWZjYXNlIGNsYXNzTmFtZT17Y3NzKHR3YGZpbGwtY3VycmVudCB0ZXh0LWdyYXktNTAwYCl9IC8+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtbC0yYCl9PlNvZnR3YXJlIERldmVsb3BlcjwvcD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgIDxMaW5rSXRlbVxuICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3d3dy5nb29nbGUuY29tL21hcHMvcGxhY2UvU2luZ2Fwb3JlL1wiXG4gICAgICAgICAgICAgIHRpdGxlPVwiU2luZ2Fwb3JlXCJcbiAgICAgICAgICAgICAgSWNvbj17RmFMb2NhdGlvbkFycm93fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWItMyBsZWFkaW5nLXJlbGF4ZWRgKX0+XG4gICAgICAgICAgICBJIGFtIGEgU29mdHdhcmUgRGV2ZWxvcGVyIHdpdGggNSB5ZWFycyBvZiBleHBlcmllbmNlIHdvcmtpbmcgbW9zdGx5XG4gICAgICAgICAgICB3aXRoIGZyb250ZW5kIHdlYiBhbmQgY3Jvc3MtcGxhdGZvcm0gbW9iaWxlIGRldmVsb3BlbWVudCB3aXRoXG4gICAgICAgICAgICBUeXBlU2NyaXB0LCBKYXZhU2NyaXB0LCBSZWFjdCBhbmQgUmVhY3QgTmF0aXZlLlxuICAgICAgICAgIDwvcD5cblxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIHRlYW0gcGxheWVyLCBhbmQgZW5qb3kgbGVhcm5pbmcgYW5kIGJ1aWxkaW5nIHJlbGlhYmxlIGFuZFxuICAgICAgICAgICAgbWFpbnRhaW5hYmxlIHNvZnR3YXJlIHRoYXQgZW5hYmxlIGRlbGlnaHRmdWwgZW5kIHVzZXIgZXhwZXJpZW5jZSBhbmRcbiAgICAgICAgICAgIGVtcG93ZXIgc3Rha2Vob2xkZXJzIHRvIGFjaGlldmUgdGhlaXIgZ29hbHMgYW5kIGRlbGl2ZXIgaW1wYWN0LlxuICAgICAgICAgIDwvcD5cblxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgVGhpbmdzIEkmYXBvczt2ZSBiZWVuIGV4Y2l0ZWQgYWJvdXQgYW5kIGFtIGV4cGxvcmluZyBsYXRlbHkgYXJlIGlPU1xuICAgICAgICAgICAgZGV2ZWxvcG1lbnQgd2l0aCBTd2lmdFVJIGFuZCBmdWxsLXN0YWNrIHdlYiBkZXZlbG9wbWVudC5cbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUxpbmtlZGluSW59XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICAgIDxMaW5rSXRlbVxuICAgICAgICAgICAgICAgIHVybD1cImh0dHBzOi8vZ2l0aHViLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIEljb249e0ZhR2l0aHVifVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vdHdpdHRlci5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIEljb249e0ZhVHdpdHRlcn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yIGZvbnQtc2VtaWJvbGRgKX0+UHJvamVjdHM8L2gzPlxuICAgICAgICAgIDxwPkNvbWluZyBzb29uLi4uPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICA8L2Rpdj5cbiAgICA8L21haW4+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleFxuXG5jb25zdCBMaW5rSXRlbSA9ICh7IHVybCwgdGl0bGUsIEljb24gfSkgPT4gKFxuICA8c3BhbiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlcmApfT5cbiAgICA8c3Bhbj5cbiAgICAgIDxJY29uIGNsYXNzTmFtZT17Y3NzKHR3YGZpbGwtY3VycmVudCB0ZXh0LWdyYXktNTAwYCl9IC8+XG4gICAgPC9zcGFuPlxuICAgIDxhXG4gICAgICBocmVmPXt1cmx9XG4gICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgcmVsPVwibm9yZWZlcnJlclwiXG4gICAgICBjbGFzc05hbWU9e2Nzcyh0d2BtbC0yIGhvdmVyOnVuZGVybGluZWApfVxuICAgID5cbiAgICAgIHt0aXRsZX1cbiAgICA8L2E+XG4gIDwvc3Bhbj5cbilcbiJdfQ== */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, __jsx(\"main\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"768b68-Index\",\n      styles: \"display:flex;flex-direction:column;max-width:100%;padding-left:1rem;padding-right:1rem;padding-top:1rem;padding-bottom:1rem;@media (min-width: 768px){flex-direction:row;};label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWFxQiIsImZpbGUiOiIvVXNlcnMvanVuc2hlbmdwaWVycmUvTWUvV29ya3NwYWNlL2p1bnNoZW5ncGllcnJlLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NzcydcbmltcG9ydCB0dyBmcm9tICdAdGFpbHdpbmRjc3NpbmpzL21hY3JvJ1xuXG5pbXBvcnQge1xuICBGYUJyaWVmY2FzZSxcbiAgRmFHaXRodWIsXG4gIEZhTGlua2VkaW5JbixcbiAgRmFMb2NhdGlvbkFycm93LFxuICBGYVR3aXR0ZXIsXG59IGZyb20gJ3JlYWN0LWljb25zL2ZhJ1xuXG5jb25zdCBJbmRleCA9ICgpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BncmlkIG1kOmp1c3RpZnktY2VudGVyIG1kOml0ZW1zLWNlbnRlciBoLXNjcmVlbmApfT5cbiAgICA8bWFpbiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtY29sIG1kOmZsZXgtcm93IG1heC13LWZ1bGwgcHgtNCBweS00IGApfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgPGltZ1xuICAgICAgICAgIGNsYXNzTmFtZT17Y3NzKHR3YHctNjQgcm91bmRlZC1mdWxsYCl9XG4gICAgICAgICAgc3JjPVwiL3Byb2ZpbGVfaW1hZ2VfanVuc2hlbmdwaWVycmUuanBnXCJcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1kOm1sLTggbWQ6bWF4LXctbWRgKX0+XG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT17Y3NzKHR3YGZvbnQtc2VtaWJvbGQgdGV4dC0zeGwgbWItMiBmb250LXNhbnNgKX0+XG4gICAgICAgICAgICBUZW8gSnVuIFNoZW5nLCBQaWVycmVcbiAgICAgICAgICA8L2gxPlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlciBtYi0yYCl9PlxuICAgICAgICAgICAgPEZhQnJpZWZjYXNlIGNsYXNzTmFtZT17Y3NzKHR3YGZpbGwtY3VycmVudCB0ZXh0LWdyYXktNTAwYCl9IC8+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtbC0yYCl9PlNvZnR3YXJlIERldmVsb3BlcjwvcD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgIDxMaW5rSXRlbVxuICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3d3dy5nb29nbGUuY29tL21hcHMvcGxhY2UvU2luZ2Fwb3JlL1wiXG4gICAgICAgICAgICAgIHRpdGxlPVwiU2luZ2Fwb3JlXCJcbiAgICAgICAgICAgICAgSWNvbj17RmFMb2NhdGlvbkFycm93fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWItMyBsZWFkaW5nLXJlbGF4ZWRgKX0+XG4gICAgICAgICAgICBJIGFtIGEgU29mdHdhcmUgRGV2ZWxvcGVyIHdpdGggNSB5ZWFycyBvZiBleHBlcmllbmNlIHdvcmtpbmcgbW9zdGx5XG4gICAgICAgICAgICB3aXRoIGZyb250ZW5kIHdlYiBhbmQgY3Jvc3MtcGxhdGZvcm0gbW9iaWxlIGRldmVsb3BlbWVudCB3aXRoXG4gICAgICAgICAgICBUeXBlU2NyaXB0LCBKYXZhU2NyaXB0LCBSZWFjdCBhbmQgUmVhY3QgTmF0aXZlLlxuICAgICAgICAgIDwvcD5cblxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIHRlYW0gcGxheWVyLCBhbmQgZW5qb3kgbGVhcm5pbmcgYW5kIGJ1aWxkaW5nIHJlbGlhYmxlIGFuZFxuICAgICAgICAgICAgbWFpbnRhaW5hYmxlIHNvZnR3YXJlIHRoYXQgZW5hYmxlIGRlbGlnaHRmdWwgZW5kIHVzZXIgZXhwZXJpZW5jZSBhbmRcbiAgICAgICAgICAgIGVtcG93ZXIgc3Rha2Vob2xkZXJzIHRvIGFjaGlldmUgdGhlaXIgZ29hbHMgYW5kIGRlbGl2ZXIgaW1wYWN0LlxuICAgICAgICAgIDwvcD5cblxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgVGhpbmdzIEkmYXBvczt2ZSBiZWVuIGV4Y2l0ZWQgYWJvdXQgYW5kIGFtIGV4cGxvcmluZyBsYXRlbHkgYXJlIGlPU1xuICAgICAgICAgICAgZGV2ZWxvcG1lbnQgd2l0aCBTd2lmdFVJIGFuZCBmdWxsLXN0YWNrIHdlYiBkZXZlbG9wbWVudC5cbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUxpbmtlZGluSW59XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICAgIDxMaW5rSXRlbVxuICAgICAgICAgICAgICAgIHVybD1cImh0dHBzOi8vZ2l0aHViLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIEljb249e0ZhR2l0aHVifVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vdHdpdHRlci5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIEljb249e0ZhVHdpdHRlcn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yIGZvbnQtc2VtaWJvbGRgKX0+UHJvamVjdHM8L2gzPlxuICAgICAgICAgIDxwPkNvbWluZyBzb29uLi4uPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICA8L2Rpdj5cbiAgICA8L21haW4+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleFxuXG5jb25zdCBMaW5rSXRlbSA9ICh7IHVybCwgdGl0bGUsIEljb24gfSkgPT4gKFxuICA8c3BhbiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlcmApfT5cbiAgICA8c3Bhbj5cbiAgICAgIDxJY29uIGNsYXNzTmFtZT17Y3NzKHR3YGZpbGwtY3VycmVudCB0ZXh0LWdyYXktNTAwYCl9IC8+XG4gICAgPC9zcGFuPlxuICAgIDxhXG4gICAgICBocmVmPXt1cmx9XG4gICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgcmVsPVwibm9yZWZlcnJlclwiXG4gICAgICBjbGFzc05hbWU9e2Nzcyh0d2BtbC0yIGhvdmVyOnVuZGVybGluZWApfVxuICAgID5cbiAgICAgIHt0aXRsZX1cbiAgICA8L2E+XG4gIDwvc3Bhbj5cbilcbiJdfQ== */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"wi5l2a-Index\",\n      styles: \"margin-bottom:1rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNzQiIsImZpbGUiOiIvVXNlcnMvanVuc2hlbmdwaWVycmUvTWUvV29ya3NwYWNlL2p1bnNoZW5ncGllcnJlLmdpdGh1Yi5pby9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NzcydcbmltcG9ydCB0dyBmcm9tICdAdGFpbHdpbmRjc3NpbmpzL21hY3JvJ1xuXG5pbXBvcnQge1xuICBGYUJyaWVmY2FzZSxcbiAgRmFHaXRodWIsXG4gIEZhTGlua2VkaW5JbixcbiAgRmFMb2NhdGlvbkFycm93LFxuICBGYVR3aXR0ZXIsXG59IGZyb20gJ3JlYWN0LWljb25zL2ZhJ1xuXG5jb25zdCBJbmRleCA9ICgpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BncmlkIG1kOmp1c3RpZnktY2VudGVyIG1kOml0ZW1zLWNlbnRlciBoLXNjcmVlbmApfT5cbiAgICA8bWFpbiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtY29sIG1kOmZsZXgtcm93IG1heC13LWZ1bGwgcHgtNCBweS00IGApfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgPGltZ1xuICAgICAgICAgIGNsYXNzTmFtZT17Y3NzKHR3YHctNjQgcm91bmRlZC1mdWxsYCl9XG4gICAgICAgICAgc3JjPVwiL3Byb2ZpbGVfaW1hZ2VfanVuc2hlbmdwaWVycmUuanBnXCJcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1kOm1sLTggbWQ6bWF4LXctbWRgKX0+XG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT17Y3NzKHR3YGZvbnQtc2VtaWJvbGQgdGV4dC0zeGwgbWItMiBmb250LXNhbnNgKX0+XG4gICAgICAgICAgICBUZW8gSnVuIFNoZW5nLCBQaWVycmVcbiAgICAgICAgICA8L2gxPlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlciBtYi0yYCl9PlxuICAgICAgICAgICAgPEZhQnJpZWZjYXNlIGNsYXNzTmFtZT17Y3NzKHR3YGZpbGwtY3VycmVudCB0ZXh0LWdyYXktNTAwYCl9IC8+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtbC0yYCl9PlNvZnR3YXJlIERldmVsb3BlcjwvcD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgIDxMaW5rSXRlbVxuICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3d3dy5nb29nbGUuY29tL21hcHMvcGxhY2UvU2luZ2Fwb3JlL1wiXG4gICAgICAgICAgICAgIHRpdGxlPVwiU2luZ2Fwb3JlXCJcbiAgICAgICAgICAgICAgSWNvbj17RmFMb2NhdGlvbkFycm93fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWItMyBsZWFkaW5nLXJlbGF4ZWRgKX0+XG4gICAgICAgICAgICBJIGFtIGEgU29mdHdhcmUgRGV2ZWxvcGVyIHdpdGggNSB5ZWFycyBvZiBleHBlcmllbmNlIHdvcmtpbmcgbW9zdGx5XG4gICAgICAgICAgICB3aXRoIGZyb250ZW5kIHdlYiBhbmQgY3Jvc3MtcGxhdGZvcm0gbW9iaWxlIGRldmVsb3BlbWVudCB3aXRoXG4gICAgICAgICAgICBUeXBlU2NyaXB0LCBKYXZhU2NyaXB0LCBSZWFjdCBhbmQgUmVhY3QgTmF0aXZlLlxuICAgICAgICAgIDwvcD5cblxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIHRlYW0gcGxheWVyLCBhbmQgZW5qb3kgbGVhcm5pbmcgYW5kIGJ1aWxkaW5nIHJlbGlhYmxlIGFuZFxuICAgICAgICAgICAgbWFpbnRhaW5hYmxlIHNvZnR3YXJlIHRoYXQgZW5hYmxlIGRlbGlnaHRmdWwgZW5kIHVzZXIgZXhwZXJpZW5jZSBhbmRcbiAgICAgICAgICAgIGVtcG93ZXIgc3Rha2Vob2xkZXJzIHRvIGFjaGlldmUgdGhlaXIgZ29hbHMgYW5kIGRlbGl2ZXIgaW1wYWN0LlxuICAgICAgICAgIDwvcD5cblxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgVGhpbmdzIEkmYXBvczt2ZSBiZWVuIGV4Y2l0ZWQgYWJvdXQgYW5kIGFtIGV4cGxvcmluZyBsYXRlbHkgYXJlIGlPU1xuICAgICAgICAgICAgZGV2ZWxvcG1lbnQgd2l0aCBTd2lmdFVJIGFuZCBmdWxsLXN0YWNrIHdlYiBkZXZlbG9wbWVudC5cbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUxpbmtlZGluSW59XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICAgIDxMaW5rSXRlbVxuICAgICAgICAgICAgICAgIHVybD1cImh0dHBzOi8vZ2l0aHViLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIEljb249e0ZhR2l0aHVifVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vdHdpdHRlci5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIEljb249e0ZhVHdpdHRlcn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yIGZvbnQtc2VtaWJvbGRgKX0+UHJvamVjdHM8L2gzPlxuICAgICAgICAgIDxwPkNvbWluZyBzb29uLi4uPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICA8L2Rpdj5cbiAgICA8L21haW4+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleFxuXG5jb25zdCBMaW5rSXRlbSA9ICh7IHVybCwgdGl0bGUsIEljb24gfSkgPT4gKFxuICA8c3BhbiBjbGFzc05hbWU9e2Nzcyh0d2BmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlcmApfT5cbiAgICA8c3Bhbj5cbiAgICAgIDxJY29uIGNsYXNzTmFtZT17Y3NzKHR3YGZpbGwtY3VycmVudCB0ZXh0LWdyYXktNTAwYCl9IC8+XG4gICAgPC9zcGFuPlxuICAgIDxhXG4gICAgICBocmVmPXt1cmx9XG4gICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgcmVsPVwibm9yZWZlcnJlclwiXG4gICAgICBjbGFzc05hbWU9e2Nzcyh0d2BtbC0yIGhvdmVyOnVuZGVybGluZWApfVxuICAgID5cbiAgICAgIHt0aXRsZX1cbiAgICA8L2E+XG4gIDwvc3Bhbj5cbilcbiJdfQ== */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"tzyzq1-Index\",\n      styles: \"width:16rem;border-radius:9999px;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdCcUIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    src: \"/profile_image_junshengpierre.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"1i1f0qc-Index\",\n      styles: \"@media (min-width: 768px){margin-left:2rem;max-width:28rem;};label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCc0IiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"wi5l2a-Index\",\n      styles: \"margin-bottom:1rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNCNEIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"8k7d3j-Index\",\n      styles: \"font-weight:600;font-size:1.875rem;margin-bottom:0.5rem;font-family:Inter var, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVCeUIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Teo Jun Sheng, Pierre\"), __jsx(\"div\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"jvmwn6-Index\",\n      styles: \"display:flex;flex-direction:row;align-items:center;margin-bottom:0.5rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJCMEIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(react_icons_fa__WEBPACK_IMPORTED_MODULE_2__[\"FaBriefcase\"], {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])({\n      \"--text-opacity\": \"1\",\n      \"fill\": \"currentColor\",\n      \"color\": [\"#6b7280\", \"rgba(107, 114, 128, var(--text-opacity))\"]\n    }, false ? undefined : \";label:Index;\", false ? undefined : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCb0MiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"lk1cbc-Index\",\n      styles: \"margin-left:0.5rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCMEIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Software Developer\")), __jsx(\"div\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"l5enwr-Index\",\n      styles: \"margin-bottom:0.5rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDMEIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(LinkItem, {\n    url: \"https://www.google.com/maps/place/Singapore/\",\n    title: \"Singapore\",\n    Icon: react_icons_fa__WEBPACK_IMPORTED_MODULE_2__[\"FaLocationArrow\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))), __jsx(\"section\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"wi5l2a-Index\",\n      styles: \"margin-bottom:1rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDNEIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"67gxqh-Index\",\n      styles: \"margin-bottom:0.75rem;line-height:1.625;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBDd0IiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"I am a Software Developer with 5 years of experience working mostly with frontend web and cross-platform mobile developement with TypeScript, JavaScript, React and React Native.\"), __jsx(\"p\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"67gxqh-Index\",\n      styles: \"margin-bottom:0.75rem;line-height:1.625;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdEd0IiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"I am a team player, and enjoy learning and building reliable and maintainable software that enable delightful end user experience and empower stakeholders to achieve their goals and deliver impact.\"), __jsx(\"p\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"67gxqh-Index\",\n      styles: \"margin-bottom:0.75rem;line-height:1.625;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNEd0IiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Things I've been excited about and am exploring lately are iOS development with SwiftUI and full-stack web development.\")), __jsx(\"section\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"wi5l2a-Index\",\n      styles: \"margin-bottom:1rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRENEIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"l5enwr-Index\",\n      styles: \"margin-bottom:0.5rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThEMkIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(LinkItem, {\n    url: \"https://www.linkedin.com/in/junshengpierre\",\n    title: \"https://www.linkedin.com/in/junshengpierre\",\n    Icon: react_icons_fa__WEBPACK_IMPORTED_MODULE_2__[\"FaLinkedinIn\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), __jsx(\"li\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"l5enwr-Index\",\n      styles: \"margin-bottom:0.5rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFFMkIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(LinkItem, {\n    url: \"https://github.com/junshengpierre\",\n    title: \"https://github.com/junshengpierre\",\n    Icon: react_icons_fa__WEBPACK_IMPORTED_MODULE_2__[\"FaGithub\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), __jsx(\"li\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"l5enwr-Index\",\n      styles: \"margin-bottom:0.5rem;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRFMkIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(LinkItem, {\n    url: \"https://twitter.com/junshengpierre\",\n    title: \"https://twitter.com/junshengpierre\",\n    Icon: react_icons_fa__WEBPACK_IMPORTED_MODULE_2__[\"FaTwitter\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })))), __jsx(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"1d6ql59-Index\",\n      styles: \"margin-bottom:0.5rem;font-weight:600;label:Index;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVGeUIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Projects\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Coming soon...\")))));\n};\n\n_c = Index;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\n\nvar LinkItem = function LinkItem(_ref) {\n  var url = _ref.url,\n      title = _ref.title,\n      Icon = _ref.Icon;\n  return __jsx(\"span\", {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"3jwv2l-LinkItem\",\n      styles: \"display:flex;flex-direction:row;align-items:center;label:LinkItem;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtHbUIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])({\n      \"--text-opacity\": \"1\",\n      \"fill\": \"currentColor\",\n      \"color\": [\"#6b7280\", \"rgba(107, 114, 128, var(--text-opacity))\"]\n    }, false ? undefined : \";label:LinkItem;\", false ? undefined : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9HdUIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  })), __jsx(\"a\", {\n    href: url,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: /*#__PURE__*/Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(false ? undefined : {\n      name: \"4ru27s-LinkItem\",\n      styles: \"margin-left:0.5rem;&:hover{text-decoration:underline;};label:LinkItem;\",\n      map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdW5zaGVuZ3BpZXJyZS9NZS9Xb3Jrc3BhY2UvanVuc2hlbmdwaWVycmUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBHaUIiLCJmaWxlIjoiL1VzZXJzL2p1bnNoZW5ncGllcnJlL01lL1dvcmtzcGFjZS9qdW5zaGVuZ3BpZXJyZS5naXRodWIuaW8vcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnXG5pbXBvcnQgdHcgZnJvbSAnQHRhaWx3aW5kY3NzaW5qcy9tYWNybydcblxuaW1wb3J0IHtcbiAgRmFCcmllZmNhc2UsXG4gIEZhR2l0aHViLFxuICBGYUxpbmtlZGluSW4sXG4gIEZhTG9jYXRpb25BcnJvdyxcbiAgRmFUd2l0dGVyLFxufSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZ3JpZCBtZDpqdXN0aWZ5LWNlbnRlciBtZDppdGVtcy1jZW50ZXIgaC1zY3JlZW5gKX0+XG4gICAgPG1haW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBtYXgtdy1mdWxsIHB4LTQgcHktNCBgKX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTRgKX0+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBjbGFzc05hbWU9e2Nzcyh0d2B3LTY0IHJvdW5kZWQtZnVsbGApfVxuICAgICAgICAgIHNyYz1cIi9wcm9maWxlX2ltYWdlX2p1bnNoZW5ncGllcnJlLmpwZ1wiXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh0d2BtZDptbC04IG1kOm1heC13LW1kYCl9PlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2Nzcyh0d2Bmb250LXNlbWlib2xkIHRleHQtM3hsIG1iLTIgZm9udC1zYW5zYCl9PlxuICAgICAgICAgICAgVGVvIEp1biBTaGVuZywgUGllcnJlXG4gICAgICAgICAgPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgbWItMmApfT5cbiAgICAgICAgICAgIDxGYUJyaWVmY2FzZSBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMmApfT5Tb2Z0d2FyZSBEZXZlbG9wZXI8L3A+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHR3YG1iLTJgKX0+XG4gICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlL1NpbmdhcG9yZS9cIlxuICAgICAgICAgICAgICB0aXRsZT1cIlNpbmdhcG9yZVwiXG4gICAgICAgICAgICAgIEljb249e0ZhTG9jYXRpb25BcnJvd31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2Nzcyh0d2BtYi00YCl9PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHR3YG1iLTMgbGVhZGluZy1yZWxheGVkYCl9PlxuICAgICAgICAgICAgSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIDUgeWVhcnMgb2YgZXhwZXJpZW5jZSB3b3JraW5nIG1vc3RseVxuICAgICAgICAgICAgd2l0aCBmcm9udGVuZCB3ZWIgYW5kIGNyb3NzLXBsYXRmb3JtIG1vYmlsZSBkZXZlbG9wZW1lbnQgd2l0aFxuICAgICAgICAgICAgVHlwZVNjcmlwdCwgSmF2YVNjcmlwdCwgUmVhY3QgYW5kIFJlYWN0IE5hdGl2ZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIEkgYW0gYSB0ZWFtIHBsYXllciwgYW5kIGVuam95IGxlYXJuaW5nIGFuZCBidWlsZGluZyByZWxpYWJsZSBhbmRcbiAgICAgICAgICAgIG1haW50YWluYWJsZSBzb2Z0d2FyZSB0aGF0IGVuYWJsZSBkZWxpZ2h0ZnVsIGVuZCB1c2VyIGV4cGVyaWVuY2UgYW5kXG4gICAgICAgICAgICBlbXBvd2VyIHN0YWtlaG9sZGVycyB0byBhY2hpZXZlIHRoZWlyIGdvYWxzIGFuZCBkZWxpdmVyIGltcGFjdC5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e2Nzcyh0d2BtYi0zIGxlYWRpbmctcmVsYXhlZGApfT5cbiAgICAgICAgICAgIFRoaW5ncyBJJmFwb3M7dmUgYmVlbiBleGNpdGVkIGFib3V0IGFuZCBhbSBleHBsb3JpbmcgbGF0ZWx5IGFyZSBpT1NcbiAgICAgICAgICAgIGRldmVsb3BtZW50IHdpdGggU3dpZnRVSSBhbmQgZnVsbC1zdGFjayB3ZWIgZGV2ZWxvcG1lbnQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtjc3ModHdgbWItNGApfT5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICB0aXRsZT1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgSWNvbj17RmFMaW5rZWRpbklufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9e2Nzcyh0d2BtYi0yYCl9PlxuICAgICAgICAgICAgICA8TGlua0l0ZW1cbiAgICAgICAgICAgICAgICB1cmw9XCJodHRwczovL2dpdGh1Yi5jb20vanVuc2hlbmdwaWVycmVcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiaHR0cHM6Ly9naXRodWIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYUdpdGh1Yn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjc3ModHdgbWItMmApfT5cbiAgICAgICAgICAgICAgPExpbmtJdGVtXG4gICAgICAgICAgICAgICAgdXJsPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9qdW5zaGVuZ3BpZXJyZVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJodHRwczovL3R3aXR0ZXIuY29tL2p1bnNoZW5ncGllcnJlXCJcbiAgICAgICAgICAgICAgICBJY29uPXtGYVR3aXR0ZXJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cblxuICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtjc3ModHdgbWItMiBmb250LXNlbWlib2xkYCl9PlByb2plY3RzPC9oMz5cbiAgICAgICAgICA8cD5Db21pbmcgc29vbi4uLjwvcD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYWluPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY29uc3QgTGlua0l0ZW0gPSAoeyB1cmwsIHRpdGxlLCBJY29uIH0pID0+IChcbiAgPHNwYW4gY2xhc3NOYW1lPXtjc3ModHdgZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXJgKX0+XG4gICAgPHNwYW4+XG4gICAgICA8SWNvbiBjbGFzc05hbWU9e2Nzcyh0d2BmaWxsLWN1cnJlbnQgdGV4dC1ncmF5LTUwMGApfSAvPlxuICAgIDwvc3Bhbj5cbiAgICA8YVxuICAgICAgaHJlZj17dXJsfVxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIHJlbD1cIm5vcmVmZXJyZXJcIlxuICAgICAgY2xhc3NOYW1lPXtjc3ModHdgbWwtMiBob3Zlcjp1bmRlcmxpbmVgKX1cbiAgICA+XG4gICAgICB7dGl0bGV9XG4gICAgPC9hPlxuICA8L3NwYW4+XG4pXG4iXX0= */\",\n      toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, title));\n};\n\n_c2 = LinkItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"LinkItem\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ })

})